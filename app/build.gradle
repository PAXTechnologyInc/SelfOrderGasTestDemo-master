apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply from: '../config/config.gradle'
android {
    compileSdkVersion COMPILE_SDK_VERSION

    defaultConfig {
        applicationId "com.pax.order"
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode 4
        versionName "1.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
    }

    signingConfigs {
        paxConfig {
            storeFile file("${project.rootDir}/paxapp.keystore")
            storePassword "pax123"
            keyPassword "pax123"
            keyAlias "androiddebugkey"
        }
    }

    buildTypes {
        debug {
            buildConfigField("String", "BUILD_TIME", "\"" + new Date().format("yyyy/MM/dd HH:mm:ss") + "\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField("String", "BUILD_TIME", "\"" + new Date().format("yyyy/MM/dd HH:mm:ss") + "\"")
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.paxConfig
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
//    compileOptions {
//        sourceCompatibility = 1.8
//    }

    configurations.all {
        resolutionStrategy.force 'com.android.support:support-annotations:' + ANDROID_ANNOTATIONS
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "Order-${buildType.name}-v${defaultConfig.versionName}.apk"
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

task jacocoTestReport(type: JacocoReport) {

    group = "Reporting"
    description = "Generate Jacoco coverage reports on the  build."

    classDirectories = fileTree(

            dir: "${project.buildDir}/intermediates/classes",

            excludes: ['**/R.class',

                       '**/R$*.class',

                       '**/*$ViewInjector*.*',

                       '**/BuildConfig.*',

                       '**/Manifest*.*']

    )

    def coverageSourceDirs = [
            "src/main/java"
    ]

    additionalSourceDirs = files(coverageSourceDirs)

    sourceDirectories = files(coverageSourceDirs)

    executionData = fileTree(dir: './build/outputs', include: '**/*.ec')

    reports {
        xml.enabled = true

        html.enabled = false
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    implementation files('libs/EasyLinkSdk_V1.00.01_20171130.jar')
    implementation 'com.jakewharton:butterknife:7.0.0'
    implementation 'com.android.support:appcompat-v7:' + ANDROID_SUPPORT_V7
    implementation 'com.android.support:design:' + ANDROID_DESIGN
    implementation 'com.android.support.constraint:constraint-layout:' + ANDROID_SUPPORT_CONSTRAINT
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:' + JUNIT_SUPPORT
    androidTestImplementation 'com.android.support.test:runner:' + ANDROID_TEST_RUNNER
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:' + ANDROID_TEST_ESPRESSO
    implementation 'com.github.bumptech.glide:glide:' + GLIDE_VERSION
    implementation 'com.j256.ormlite:ormlite-core:' + ORMLITE_CORE_VERSION
    implementation 'com.j256.ormlite:ormlite-android:' + ORMLITE_ANDROID_VERSION
    implementation 'com.squareup.retrofit2:retrofit:' + RETROFIT_VERSION
    implementation 'com.squareup.okhttp3:logging-interceptor:' + LOGGING_INTERCEPTOR_VERSION
    implementation 'com.squareup.retrofit2:converter-gson:' + RETROFIT_VERSION
    implementation 'com.squareup.retrofit2:adapter-rxjava2:' + RETROFIT_VERSION
    implementation 'cn.bingoogolapple:bga-banner:' + BGA_BANNER + '@aar'
    implementation 'q.rorbin:badgeview:' + BADGEVIEW_VERSION
    implementation 'com.contrarywind:wheelview:' + WHEELVIEW_VERSION
    implementation 'com.orhanobut:logger:' + ORHANOBUT_LOGGER_VERSION
    implementation 'com.google.firebase:firebase-messaging:' + FCM_VERSION
    implementation 'org.greenrobot:eventbus:' + EVENTBUS_VERSION
    implementation project(':commonui')
    implementation project(':verticaltablayout')
    implementation project(':dlfileslib')
    implementation project(':sdk')
    implementation 'com.afollestad.material-dialogs:core:' + MATERIAL_DIALOG_VERSION
    implementation 'com.facebook.stetho:stetho:' + STETHO_VERSION
    implementation 'io.reactivex.rxjava2:rxandroid:' + RXANDROID_VERSION
    implementation 'io.reactivex.rxjava2:rxjava:' + RXJAVA2_VERSION
    //    implementation 'com.github.arcadefire:nice-spinner:' + NICE_SPINNER_VERSION
    implementation project(':nicsspinner')
    //ver:1.3.8
    implementation project(':FastBleLib')
    implementation project(':keyboard')
    //    implementation 'com.github.Simon986793021:NumberKeyboard:v1.0'
    implementation files('libs/EasyLinkSdk_V2.01.00_20190606.jar')
    implementation 'com.github.d-max:spots-dialog:0.7@aar'
    compile project(path: ':passcodeview')
}
apply plugin: 'com.google.gms.google-services'
